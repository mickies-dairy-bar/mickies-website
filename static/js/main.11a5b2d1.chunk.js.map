{"version":3,"sources":["Menu.js","Components/Header.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["menuItems","name","description","types","footnotes","items","price","Menu","className","map","category","subcategory","item","Component","Header","Footer","window","scrollTo","style","position","zIndex","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2UAIMA,G,MAAY,CAChB,CACEC,KAAM,YACNC,YAAa,GACbC,MAAO,CACL,CACEF,KAAM,uBACNC,YAAa,GACbE,UAAW,GACXC,MAAO,CACL,CACEJ,KAAM,YACNC,YACE,8PACFI,MAAO,OAET,CACEL,KAAM,qBACNC,YACE,oIACFI,MAAO,KACPF,UAAW,yDAEb,CACEH,KAAM,iBACNC,YACE,+DACFI,MAAO,OAET,CACEL,KAAM,sBACNC,YACE,8DACFI,MAAO,OAET,CACEL,KAAM,eACNC,YAAa,uDACbI,MAAO,KACPF,UAAW,mCAIjB,CACEH,KAAM,eACNC,YAAa,GACbE,UAAW,CACT,kCACA,8BAEFC,MAAO,CACL,CAAEJ,KAAM,iBAAkBC,YAAa,GAAII,MAAO,SAClD,CACEL,KAAM,kBACNC,YAAa,GACbI,MAAO,MAET,CACEL,KAAM,mBACNC,YAAa,GACbI,MAAO,QAIb,CACEL,KAAM,SACNC,YAAa,GACbE,UAAW,GACXC,MAAO,CACL,CACEJ,KAAM,0BACNC,YAAa,GACbI,MAAO,MAET,CACEL,KAAM,yBACNC,YACE,8EACFI,MAAO,OAET,CACEL,KAAM,8BACNC,YACE,gEACFI,MAAO,OAET,CACEL,KAAM,wBACNC,YAAa,sDACbI,MAAO,OAET,CACEL,KAAM,kCACNC,YACE,4KACFI,MAAO,SAIb,CACEL,KAAM,WACNC,YAAa,yDACbG,MAAO,CACL,CACEJ,KAAM,sBACNC,YAAa,GACbI,MAAO,MAET,CACEL,KAAM,uBACNC,YAAa,GACbI,MAAO,MAET,CACEL,KAAM,oBACNC,YAAa,GACbI,MAAO,MAET,CACEL,KAAM,qBACNC,YAAa,GACbI,MAAO,MAET,CACEL,KAAM,0BACNC,YACE,+EACFI,MAAO,MAET,CACEL,KAAM,sBACNC,YAAa,wCACbI,MAAO,MAET,CACEL,KAAM,+BACNC,YAAa,oCACbI,MAAO,MAET,CACEL,KAAM,gBACNC,YACE,yDACFI,MAAO,UAMjB,CACEL,KAAM,QACNC,YAAa,GACbC,MAAO,IAET,CACEF,KAAM,SACNC,YAAa,GACbC,MAAO,IAET,CACEF,KAAM,SACNC,YAAa,GACbC,MAAO,MA2CII,E,uKArCX,OACE,6BACE,yBAAKC,UAAU,oBACb,wBAAIA,UAAU,UAAd,SAEF,yBAAKA,UAAU,aACZR,EAAUS,KAAI,SAAAC,GAAQ,OACrB,yBAAKF,UAAU,YACb,4BAAKE,EAAST,MACd,2BAAIS,EAASR,aACb,6BACGQ,EAASP,MAAMM,KAAI,SAAAE,GAAW,OAC7B,yBAAKH,UAAU,gBACb,4BAAKG,EAAYV,MACjB,2BAAIU,EAAYT,aAChB,wBAAIM,UAAU,kBACXG,EAAYN,MAAMI,KAAI,SAAAG,GAAI,OACzB,wBAAIJ,UAAU,QACZ,6BACE,2BAAII,EAAKX,MACT,2BAAIW,EAAKN,QAEX,2BAAIM,EAAKV,iC,GAxBhBW,aC1JJC,G,6KAVX,OACE,yBAAKN,UAAU,QACb,6BACE,sD,GALWK,cCsBNE,G,kLApBXC,OAAOC,SAAS,EAAG,K,+BAInB,OACE,yBAAKT,UAAU,UACb,yBACEA,UAAU,aACVU,MAAO,CAAEC,SAAU,WAAYC,OAAQ,QAEvC,+BAEF,yBAAKZ,UAAU,eACb,sD,GAfWK,c,MCYNQ,MAVf,WACE,OACE,yBAAKb,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCcc,QACW,cAA7BN,OAAOO,SAASC,UAEe,UAA7BR,OAAOO,SAASC,UAEhBR,OAAOO,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.11a5b2d1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./Menu.css\";\n\nconst menuItems = [\n  {\n    name: \"Breakfast\",\n    description: \"\",\n    types: [\n      {\n        name: \"Mickie's Specialties\",\n        description: \"\",\n        footnotes: [],\n        items: [\n          {\n            name: \"Scrambler\",\n            description:\n              \"Layer of yanks, three eggs (scrambled unless specified otherwise), one meat or two veggies, cheese (cheddar by default), gravy (on top, side, or none), and toast. Additional veggies may be added for $.50 each. Additional meats and cheeses are $1 each.\",\n            price: \"$10\"\n          },\n          {\n            name: \"Breakfast Sandwich\",\n            description:\n              \"Bagel or English Muffin or Toast, Bacon or Ham or Sausage, American or Cheddar or Swiss or Pepperjack, and 1 Egg cooked any style\",\n            price: \"$6\",\n            footnotes: \"*May add up to 2 veggies free of charge, upon request\"\n          },\n          {\n            name: \"Steak and Eggs\",\n            description:\n              \"Hand-cut sirloin averaging 10 oz., 2 eggs, toast, and yanks.\",\n            price: \"$14\"\n          },\n          {\n            name: \"Pork Chops and Eggs\",\n            description:\n              \"Two marinated boneless pork chops, 2 eggs, toast and yanks.\",\n            price: \"$12\"\n          },\n          {\n            name: \"French Toast\",\n            description: \"2 cinnamon rolls cut in half, battered, and grilled.\",\n            price: \"$7\",\n            footnotes: \"Half order available for - $5\"\n          }\n        ]\n      },\n      {\n        name: \"Eggs & Toast\",\n        description: \"\",\n        footnotes: [\n          \"Any egg after the first - $1.50\",\n          \"Egg whites - +$.50 per egg\"\n        ],\n        items: [\n          { name: \"1 Egg no toast\", description: \"\", price: \"$1.50\" },\n          {\n            name: \"2 Eggs no toast\",\n            description: \"\",\n            price: \"$3\"\n          },\n          {\n            name: \"2 Eggs and toast\",\n            description: \"\",\n            price: \"$4\"\n          }\n        ]\n      },\n      {\n        name: \"Omelet\",\n        description: \"\",\n        footnotes: [],\n        items: [\n          {\n            name: \"Plain Omelet with Toast\",\n            description: \"\",\n            price: \"$4\"\n          },\n          {\n            name: \"Veggie Omelet w/ Yanks\",\n            description:\n              \"Onions, peppers, mushrooms, broccoli, spinach, tomato, and choice of cheese\",\n            price: \"$10\"\n          },\n          {\n            name: \"Chili Cheese Omelet w/Yanks\",\n            description:\n              \"American cheese omelet with homemade chili and cheddar on top\",\n            price: \"$10\"\n          },\n          {\n            name: \"Reuben Omelet w/Yanks\",\n            description: \"Corned beef, Swiss, thousand island, and sauerkraut\",\n            price: \"$10\"\n          },\n          {\n            name: \"Oriental Chicken Omelet w/Yanks\",\n            description:\n              \"Bamboo shoots, water chestnuts, baby corn, bean sprouts, onions, peppers, mushrooms, chicken breast, and stir-fry sauce. Cheese may be added to for no additional charge.\",\n            price: \"$10\"\n          }\n        ]\n      },\n      {\n        name: \"Pancakes\",\n        description: \"Listed price is 2 pancakes. Subtract $2 for 1 pancake.\",\n        items: [\n          {\n            name: \"Buttermilk Pancakes\",\n            description: \"\",\n            price: \"$7\"\n          },\n          {\n            name: \"Whole Grain Pancakes\",\n            description: \"\",\n            price: \"$7\"\n          },\n          {\n            name: \"Cornmeal Pancakes\",\n            description: \"\",\n            price: \"$7\"\n          },\n          {\n            name: \"Blueberry Pancakes\",\n            description: \"\",\n            price: \"$8\"\n          },\n          {\n            name: \"Chocolate Chip Pancakes\",\n            description:\n              \"White chocolate chips, Milk chocolate chips, Cocoa Powder, and Vanilla Syrup\",\n            price: \"$8\"\n          },\n          {\n            name: \"Strawberry Pancakes\",\n            description: \"Strawberries and Whipped Cream on Top\",\n            price: \"$8\"\n          },\n          {\n            name: \"Banana Cinnamon Nut Pancakes\",\n            description: \"Whole grain batter base (Walnuts)\",\n            price: \"$8\"\n          },\n          {\n            name: \"Griddle Cakes\",\n            description:\n              \"Whole grain batter, apples, cinnamon, raisins, oatmeal\",\n            price: \"$8\"\n          }\n        ]\n      }\n    ]\n  },\n  {\n    name: \"Lunch\",\n    description: \"\",\n    types: []\n  },\n  {\n    name: \"Dinner\",\n    description: \"\",\n    types: []\n  },\n  {\n    name: \"Drinks\",\n    description: \"\",\n    types: []\n  }\n];\n\nclass Menu extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"header-container\">\n          <h1 className=\"header\">Menu</h1>\n        </div>\n        <div className=\"container\">\n          {menuItems.map(category => (\n            <div className=\"category\">\n              <h2>{category.name}</h2>\n              <p>{category.description}</p>\n              <div>\n                {category.types.map(subcategory => (\n                  <div className=\"sub-category\">\n                    <h3>{subcategory.name}</h3>\n                    <p>{subcategory.description}</p>\n                    <ul className=\"item-container\">\n                      {subcategory.items.map(item => (\n                        <li className=\"item\">\n                          <div>\n                            <b>{item.name}</b>\n                            <b>{item.price}</b>\n                          </div>\n                          <p>{item.description}</p>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","import React, { Component } from \"react\";\n\nimport \"./Header.css\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"menu\">\n        <div>\n          <b>Mickies Dairy Bar</b>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nimport \"./Footer.css\";\n\nclass Footer extends Component {\n  scrollToTop() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return (\n      <div className=\"footer\">\n        <div\n          className=\"top-shadow\"\n          style={{ position: \"absolute\", zIndex: \"100\" }}\n        >\n          <div />\n        </div>\n        <div className=\"footer-logo\">\n          <b>Mickies Dairy Bar</b>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport Menu from \"./Menu\";\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Menu />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}